# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install pytest httpx
    
    - name: Run tests
      run: |
        pytest app/tests/ -v --junitxml=test-results.xml
    
    - name: Install Podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman
    
    - name: Build container image
      run: podman build -t myapp:${{ github.sha }} .
    
    - name: Configure AWS credentials
      if: github.ref == 'refs/heads/main'  # Only run on main branch
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      if: github.ref == 'refs/heads/main'
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Push image to Amazon ECR
      if: github.ref == 'refs/heads/main'
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: tinfoil-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        podman tag myapp:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        podman tag myapp:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        podman push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        podman push $ECR_REGISTRY/$ECR_REPOSITORY:latest
    
    - name: Update ECS service
      if: github.ref == 'refs/heads/main'
      run: |
        aws ecs update-service --cluster tinfoil-app-cluster --service tinfoil-app-service --force-new-deployment
    
    - name: Upload test results
      if: always()  # Upload test results even if tests fail
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results.xml
